"use strict";(self.webpackChunkcavin_huang_note=self.webpackChunkcavin_huang_note||[]).push([[306],{8810:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-03de649e",path:"/vue/vue%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%AE%9E%E7%94%A8%E7%9A%84vue%E6%8C%87%E4%BB%A4%E7%BB%93%E5%90%88(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0).html",title:"实用的vue指令结合(持续更新~~)",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"元素点击范围扩展指令 v-expandClick",slug:"元素点击范围扩展指令-v-expandclick",children:[{level:3,title:"源码",slug:"源码",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes",children:[]},{level:3,title:"示例",slug:"示例",children:[]}]},{level:2,title:"文本内容复制指令 v-copy",slug:"文本内容复制指令-v-copy",children:[{level:3,title:"源码",slug:"源码-1",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-1",children:[]},{level:3,title:"示例",slug:"示例-1",children:[]}]},{level:2,title:"元素全屏指令 v-screenfull",slug:"元素全屏指令-v-screenfull",children:[{level:3,title:"源码",slug:"源码-2",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-2",children:[]},{level:3,title:"示例",slug:"示例-2",children:[]}]},{level:2,title:"元素说明指令 v-tooltip",slug:"元素说明指令-v-tooltip",children:[{level:3,title:"源码",slug:"源码-3",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-3",children:[]},{level:3,title:"示例",slug:"示例-3",children:[]}]},{level:2,title:"文字超出省略指令 v-ellipsis",slug:"文字超出省略指令-v-ellipsis",children:[{level:3,title:"源码",slug:"源码-4",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-4",children:[]},{level:3,title:"示例",slug:"示例-4",children:[]}]},{level:2,title:"回到顶部指令 v-backtop",slug:"回到顶部指令-v-backtop",children:[{level:3,title:"源码",slug:"源码-5",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-5",children:[]},{level:3,title:"示例",slug:"示例-5",children:[]}]},{level:2,title:"空状态指令 v-empty",slug:"空状态指令-v-empty",children:[{level:3,title:"源码",slug:"源码-6",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-6",children:[]},{level:3,title:"示例",slug:"示例-6",children:[]}]},{level:2,title:"徽标指令 v-badge",slug:"徽标指令-v-badge",children:[{level:3,title:"源码",slug:"源码-7",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-7",children:[]},{level:3,title:"示例",slug:"示例-7",children:[]}]},{level:2,title:"拖拽指令 v-drag",slug:"拖拽指令-v-drag",children:[{level:3,title:"示例",slug:"示例-8",children:[]}]},{level:2,title:"响应缩放指令 v-resize",slug:"响应缩放指令-v-resize",children:[{level:3,title:"源码",slug:"源码-8",children:[]},{level:3,title:"参数 Attributes：",slug:"参数-attributes-8",children:[]},{level:3,title:"示例",slug:"示例-9",children:[]}]},{level:2,title:"使用方式",slug:"使用方式",children:[]}],filePathRelative:"vue/vue使用技巧/实用的vue指令结合(持续更新).md",git:{updatedTime:1643100494e3,contributors:[{name:"CavinHuang",email:"sujinw@qq.com",commits:1}]}}},7790:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="实用的vue指令结合-持续更新" tabindex="-1">实用的vue指令结合(持续更新~~)</h1><p>在 Vue 中，代码复用和抽象的主要形式是组件。然而，有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。 你可以将一些 css 样式抽象到指令中，也可以将一些 js 操作放到指令中去执行。就使用上来说，指令不用像组件一样需要引入和注册，注册后使用非常简洁方便。 对于在项目中常用到的指令，在此做了一个合集介绍，附源码可以直接在项目中使用。</p><h2 id="元素点击范围扩展指令-v-expandclick" tabindex="-1">元素点击范围扩展指令 <code>v-expandClick</code></h2><p>使用该指令可以隐式的扩展元素的点击范围，由于借用伪元素实现，故不会影响元素在页面上的排列布局。</p><h3 id="源码" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 元素点击范围扩展指令\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">expandClick</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> s <span class="token operator">=</span> document<span class="token punctuation">.</span>styleSheets<span class="token punctuation">[</span>document<span class="token punctuation">.</span>styleSheets<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>\n  <span class="token comment">// 默认向外扩展10px</span>\n  <span class="token keyword">const</span> <span class="token constant">DEFAULT</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span>\n  <span class="token keyword">const</span> ruleStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">content:&quot;&quot;;position:absolute;top:-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>top <span class="token operator">||</span> <span class="token constant">DEFAULT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;bottom:-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>bottom <span class="token operator">||</span> <span class="token constant">DEFAULT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;right:-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>right <span class="token operator">||</span> <span class="token constant">DEFAULT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;left:-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>left <span class="token operator">||</span> <span class="token constant">DEFAULT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> left<span class="token punctuation">]</span> <span class="token operator">=</span> binding<span class="token punctuation">.</span>expression <span class="token operator">&amp;&amp;</span> binding<span class="token punctuation">.</span>expression<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token keyword">const</span> classNameList <span class="token operator">=</span> el<span class="token punctuation">.</span>className<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>\n\n  el<span class="token punctuation">.</span>className <span class="token operator">=</span> classNameList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;expand_click_range&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> classNameList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>classNameList<span class="token punctuation">,</span> <span class="token string">&#39;expand_click_range&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>\n  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">||</span> <span class="token string">&quot;relative&quot;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>insertRule<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    s<span class="token punctuation">.</span><span class="token function">insertRule</span><span class="token punctuation">(</span><span class="token string">&#39;.expand_click_range::before&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;{&#39;</span> <span class="token operator">+</span> ruleStr <span class="token operator">+</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>cssRules<span class="token punctuation">.</span>length<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* IE */</span>\n    s<span class="token punctuation">.</span><span class="token function">addRule</span><span class="token punctuation">(</span><span class="token string">&#39;.expand_click_range::before&#39;</span><span class="token punctuation">,</span> ruleStr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="参数-attributes" tabindex="-1">参数 Attributes：</h3><blockquote><p>可传入的参数为：上右下左扩展的范围，单位 px，默认向外扩展 10px。</p></blockquote><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>top, right, bottom, left</td><td>上右下左扩展宽度（逗号分割），单位px</td><td>10,10,10,10</td><td>String</td><td>否</td></tr></tbody></table><p>然后你可以在模板中任何元素上使用新的 <code>v-expandClick</code>:</p><h3 id="示例" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-expandClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20,30,40,50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>glabClickoutside<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 点击范围扩大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="文本内容复制指令-v-copy" tabindex="-1">文本内容复制指令 <code>v-copy</code></h2><p>使用该指令可以复制元素的文本内容,指令支持:</p><ul><li>单击复制 v-copy</li><li>双击复制 v-copy.dblclick</li><li>点击icon复制 v-copy.icon</li></ul><p>三种模式，不传参数时，默认使用单击复制。</p><h3 id="源码-1" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">bind</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 双击触发复制</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>binding<span class="token punctuation">.</span>modifiers<span class="token punctuation">.</span>dblclick<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;dblclick&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">handleClick</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token string">&#39;copy&#39;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>binding<span class="token punctuation">.</span>modifiers<span class="token punctuation">.</span>icon<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 点击icon触发复制</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>hasIcon<span class="token punctuation">)</span> <span class="token keyword">return</span>\n      <span class="token keyword">const</span> iconElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span>\n      iconElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;el-icon-document-copy&#39;</span><span class="token punctuation">)</span>\n      iconElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;margin-left:5px&#39;</span><span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iconElement<span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span>hasIcon <span class="token operator">=</span> <span class="token boolean">true</span>\n      iconElement<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">handleClick</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      iconElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token string">&#39;copy&#39;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 单击触发复制</span>\n      el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">handleClick</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token string">&#39;copy&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">handleClick</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 创建元素</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;copyTarget&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> copyTarget <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span>\n    copyTarget<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;position:fixed;top:0;left:0;opacity:0;z-index:-1000;&#39;</span><span class="token punctuation">)</span>\n    copyTarget<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;copyTarget&#39;</span><span class="token punctuation">)</span>\n    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>copyTarget<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 复制内容</span>\n  <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;copyTarget&#39;</span><span class="token punctuation">)</span>\n  input<span class="token punctuation">.</span>value <span class="token operator">=</span> text\n  input<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&#39;copy&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="参数-attributes-1" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>dblclick</td><td>双击复制文本内容</td><td>无</td><td>String</td><td>否</td></tr><tr><td>icon</td><td>单击icon复制文本内容</td><td>无</td><td>String</td><td>否</td></tr></tbody></table><p>然后你可以在模板中任何元素上使用新的 <code>v-copy</code></p><h3 id="示例-1" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-copy</span><span class="token punctuation">&gt;</span></span> 单击复制 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-copy.dblclick</span><span class="token punctuation">&gt;</span></span> 双击复制 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-copy.icon</span><span class="token punctuation">&gt;</span></span> icon复制 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="元素全屏指令-v-screenfull" tabindex="-1">元素全屏指令 <code>v-screenfull</code></h2><p>全屏指令，点击元素进行全屏/退出全屏的操作。支持元素后面是否插入 element-ui 的全屏图标 el-icon-full-screen。</p><h3 id="源码-2" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> screenfull <span class="token keyword">from</span> <span class="token string">&#39;screenfull&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">bind</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>binding<span class="token punctuation">.</span>modifiers<span class="token punctuation">.</span>icon<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>hasIcon<span class="token punctuation">)</span> <span class="token keyword">return</span>\n      <span class="token comment">// 创建全屏图标</span>\n      <span class="token keyword">const</span> iconElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span>\n      iconElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;el-icon-full-screen&#39;</span><span class="token punctuation">)</span>\n      iconElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;margin-left:5px&#39;</span><span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iconElement<span class="token punctuation">)</span>\n      el<span class="token punctuation">.</span>hasIcon <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cursor <span class="token operator">||</span> <span class="token string">&#39;pointer&#39;</span>\n    <span class="token comment">// 监听点击全屏事件</span>\n    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">handleClick</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>screenfull<span class="token punctuation">.</span>isEnabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;浏览器不支持全屏&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n  screenfull<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="参数-attributes-2" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>icon</td><td>是否添加 icon</td><td>无</td><td>String</td><td>否</td></tr></tbody></table><h3 id="示例-2" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-screenfull.icon</span><span class="token punctuation">&gt;</span></span> 全屏 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="元素说明指令-v-tooltip" tabindex="-1">元素说明指令 <code>v-tooltip</code></h2><p>为元素添加说明，如同 <code>element-ui</code> 的 <code>el-tooltip</code>（问号 <code>icon</code> 在鼠标覆盖后，展示说明文字）。</p><h3 id="源码-3" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>hasIcon<span class="token punctuation">)</span> <span class="token keyword">return</span>\n<span class="token keyword">const</span> iconElement <span class="token operator">=</span> <span class="token function">structureIcon</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>arg<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n  el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iconElement<span class="token punctuation">)</span>\n  el<span class="token punctuation">.</span>hasIcon <span class="token operator">=</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">structureIcon</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> attrs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 拼接绑定属性</span>\n  <span class="token keyword">let</span> attrStr <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    attrStr <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>attrs<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;el-tooltip content=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>attrStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;&lt;i class=&quot;el-icon-question&quot; style=&quot;margin:0 10px&quot;&gt;&lt;/i&gt;&lt;/el-tooltip&gt;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token comment">// 创建构造器</span>\n  <span class="token keyword">const</span> tooltip <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    template<span class="token operator">:</span> a\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// 创建一个 tooltip 实例并返回 dom 节点</span>\n  <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">tooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> component<span class="token punctuation">.</span>$el\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="参数-attributes-3" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>content</td><td>传给指令的参数。例如 <code>v-tooltip:content</code> 中，参数为 &quot;content&quot; ，tooltip中展示的内容为：&quot;content&quot;</td><td>无</td><td>String</td><td>否</td></tr><tr><td>tootipParams</td><td>element-ui 支持的 tooltip 属性&quot;</td><td>无</td><td>String</td><td>否</td></tr></tbody></table><h3 id="示例-3" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-tooltip:</span>content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>tootipParams<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> 提示 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-tooltip:</span>提示内容为XXX1</span><span class="token punctuation">&gt;</span></span> 提示1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-tooltip:</span>提示内容为XXX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>tootipParams<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> 提示2 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>为指令传入 element-ui 支持的参数：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    tootipParams<span class="token operator">:</span> <span class="token punctuation">{</span>\n      placement<span class="token operator">:</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span>\n      effect<span class="token operator">:</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="文字超出省略指令-v-ellipsis" tabindex="-1">文字超出省略指令 <code>v-ellipsis</code></h2><p>使用该指令当文字内容超出宽度（默认 100 px）时自动变为省略形式。等同于使用 css：</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n<span class="token property">whiteSpace</span><span class="token punctuation">:</span> nowrap\n<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token property">textOverflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="源码-4" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> binding<span class="token punctuation">.</span>arg <span class="token operator">||</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>\n  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>whiteSpace <span class="token operator">=</span> <span class="token string">&#39;nowrap&#39;</span>\n  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">;</span>\n  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>textOverflow <span class="token operator">=</span> <span class="token string">&#39;ellipsis&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="参数-attributes-4" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>width</td><td>元素宽度</td><td>100</td><td>Number</td><td>否</td></tr></tbody></table><h3 id="示例-4" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-ellipsis:</span>100</span><span class="token punctuation">&gt;</span></span> 需要省略的文字是阿萨的副本阿萨的副本阿萨的副本阿萨的副本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="回到顶部指令-v-backtop" tabindex="-1">回到顶部指令 <code>v-backtop</code></h2><p>使用该指令可以让页面或指定元素回到顶部。</p><p>可选指定元素，如果不指定则全局页面回到顶部。可选在元素偏移多少 <code>px</code> 后显示 <code>backtop</code> 元素，例如在滚动 <code>400px</code> 后显示回到顶部按钮。</p><h3 id="源码-5" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">bind</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 响应点击后滚动到元素顶部</span>\n    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> target <span class="token operator">=</span> binding<span class="token punctuation">.</span>arg <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>arg<span class="token punctuation">)</span> <span class="token operator">:</span> window\n      target<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        behavior<span class="token operator">:</span> <span class="token string">&#39;smooth&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">update</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 滚动到达参数值才出现绑定指令的元素</span>\n    <span class="token keyword">const</span> target <span class="token operator">=</span> binding<span class="token punctuation">.</span>arg <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>arg<span class="token punctuation">)</span> <span class="token operator">:</span> window\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>binding<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      target<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>srcElement<span class="token punctuation">.</span>scrollTop <span class="token operator">&gt;</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">&#39;unset&#39;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">&#39;hidden&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 判断初始化状态</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>scrollTop <span class="token operator">&lt;</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">&#39;hidden&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">unbind</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> target <span class="token operator">=</span> binding<span class="token punctuation">.</span>arg <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>arg<span class="token punctuation">)</span> <span class="token operator">:</span> window\n    target<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">)</span>\n    el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="参数-attributes-5" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>id</td><td>给需要回到顶部的元素添加的<code>id</code></td><td>无</td><td>String</td><td>否</td></tr><tr><td>offset</td><td>偏移距离为 <code>height</code> 时显示指令绑定的元素</td><td>无</td><td>Number</td><td>否</td></tr></tbody></table><p>然后你可以在模板中任何元素上使用新的 <code>v-backtop</code> ，如下表示在 id 为 <code>app</code> 的元素滚动 <code>400px</code> 后显示绑定指令的元素</p><h3 id="示例-5" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name"><span class="token namespace">v-backtop:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 回到顶部 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">v-backtop</span><span class="token punctuation">&gt;</span></span> 回到顶部 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="空状态指令-v-empty" tabindex="-1">空状态指令 <code>v-empty</code></h2><p>使用该指令可以显示缺省的空状态。可以传入默认图片（可选，默认无图片）、默认文字内容（可选，默认为暂无数据）、以及标示是否显示空状态（必选）。</p><h3 id="源码-6" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">update</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">||</span> <span class="token string">&#39;relative&#39;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> offsetHeight<span class="token punctuation">,</span> offsetWidth <span class="token punctuation">}</span> <span class="token operator">=</span> el\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> visible<span class="token punctuation">,</span> content<span class="token punctuation">,</span> img <span class="token punctuation">}</span> <span class="token operator">=</span> binding<span class="token punctuation">.</span>value\n    <span class="token keyword">const</span> image <span class="token operator">=</span> img <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;img src=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>img<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; height=&quot;30%&quot; width=&quot;30%&quot;&gt;&lt;/img&gt;</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n    <span class="token keyword">const</span> defaultStyle <span class="token operator">=</span> <span class="token string">&quot;position:absolute;top:0;left:0;z-index:9999;background:#fff;display:flex;justify-content: center;align-items: center;&quot;</span>\n    <span class="token keyword">const</span> empty <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style=&quot;height:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>offsetHeight<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;width:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>offsetWidth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>defaultStyle<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;\n        &lt;div style=&quot;text-align:center&quot;&gt;\n          &lt;div&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>image<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/div&gt;\n          &lt;div&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content <span class="token operator">||</span> <span class="token string">&#39;暂无数据&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$el\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>lastChild<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="参数-attributes-6" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>emptyValue</td><td>包含文字内容 content、图片 img、是否显示 visible，仅 visible 必传</td><td>无</td><td>Object</td><td>否</td></tr></tbody></table><p>然后你可以在模板中任何元素上使用新的 <code>v-empty</code> ，如下传入对象 <code>emptyValue</code>：</p><h3 id="示例-6" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>500px</span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">v-empty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emptyValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 原本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>需要传入一个参数对象，例如显示文字为：暂无列表，图片路径为 <code>../../assets/images/blue_big.png</code>，控制标示 <code>visible</code>：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>emptyValue <span class="token operator">=</span> <span class="token punctuation">{</span>\n  content<span class="token operator">:</span> <span class="token string">&#39;暂无列表&#39;</span><span class="token punctuation">,</span>\n  img<span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../assets/images/blue_big.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="徽标指令-v-badge" tabindex="-1">徽标指令 <code>v-badge</code></h2><p>使用该指令在元素右上角显示徽标。 支持配置徽标的背景颜色、徽标形状；支持传入徽标上显示的数字。</p><h3 id="源码-7" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token string">&#39;#72c140&#39;</span>\n<span class="token keyword">const</span> <span class="token constant">ERROR</span> <span class="token operator">=</span> <span class="token string">&#39;#ed5b56&#39;</span>\n<span class="token keyword">const</span> <span class="token constant">WARNING</span> <span class="token operator">=</span> <span class="token string">&#39;#f0af41&#39;</span>\n<span class="token keyword">const</span> <span class="token constant">INFO</span> <span class="token operator">=</span> <span class="token string">&#39;#4091f7&#39;</span>\n<span class="token keyword">const</span> <span class="token constant">HEIGHT</span> <span class="token operator">=</span> <span class="token number">20</span>\n<span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">update</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding<span class="token punctuation">,</span> vnode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> modifiers<span class="token punctuation">,</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> binding\n    <span class="token keyword">const</span> modifiersKey <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>modifiers<span class="token punctuation">)</span>\n    <span class="token keyword">let</span> isDot <span class="token operator">=</span> modifiersKey<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;dot&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">let</span> backgroundColor <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiersKey<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      backgroundColor <span class="token operator">=</span> <span class="token constant">SUCCESS</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiersKey<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;warning&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      backgroundColor <span class="token operator">=</span> <span class="token constant">WARNING</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiersKey<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;info&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      backgroundColor <span class="token operator">=</span> <span class="token constant">INFO</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      backgroundColor <span class="token operator">=</span> <span class="token constant">ERROR</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> targetTemplate <span class="token operator">=</span> isDot \n        <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style=&quot;position:absolute;top:-5px;right:-5px;height:10px;width:10px;border-radius:50%;background:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>backgroundColor<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span> \n        <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div style=&quot;background:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>backgroundColor<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;position:absolute;top:-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">HEIGHT</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;right:-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">HEIGHT</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;height:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">HEIGHT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;min-width:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">HEIGHT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;border-radius:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">HEIGHT</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;text-align:center;line-height:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">HEIGHT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px;color:#fff;padding:0 5px;&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n\n    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">||</span> <span class="token string">&#39;relative&#39;</span>\n    <span class="token keyword">const</span> badge <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      template<span class="token operator">:</span> targetTemplate\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">badge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$el\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>lastChild<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>\n    flag <span class="token operator">=</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="参数-attributes-7" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>normal、dot</td><td>徽标形状normal为正常徽标；dot 仅为一个点</td><td>normal</td><td>String</td><td>否</td></tr><tr><td>success、error、info、warning</td><td>徽标颜色</td><td>error</td><td>String</td><td>否</td></tr><tr><td>normal、dot</td><td>徽标形状normal为正常徽标；dot 仅为一个点</td><td>normal</td><td>String</td><td>否</td></tr><tr><td>number</td><td>徽标上显示的数字</td><td>无</td><td>Number</td><td>否</td></tr></tbody></table><h3 id="示例-7" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-badge.dot.info</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>badgeCount<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#999</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="拖拽指令-v-drag" tabindex="-1">拖拽指令 <code>v-drag</code></h2><p>使用该指令可以对元素进行拖拽。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> _el <span class="token operator">=</span> el\n  document<span class="token punctuation">.</span><span class="token function-variable function">onselectstart</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span>  <span class="token comment">//禁止选择网页上的文字</span>\n  <span class="token punctuation">}</span>\n\n  _el<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> disX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> _el<span class="token punctuation">.</span>offsetLeft <span class="token comment">//鼠标按下，计算当前元素距离可视区的距离</span>\n    <span class="token keyword">let</span> disY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> _el<span class="token punctuation">.</span>offsetTop\n    document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token keyword">let</span> l <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> disX\n      <span class="token keyword">let</span> t <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> disY<span class="token punctuation">;</span>\n      _el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>\n      _el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> t <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>\n    <span class="token punctuation">}</span>\n    document<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="示例-8" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-drag</span><span class="token punctuation">&gt;</span></span> 支持拖拽的元素 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="响应缩放指令-v-resize" tabindex="-1">响应缩放指令 <code>v-resize</code></h2><p>使用该指令可以响应元素宽高改变时执行的方法。</p><h3 id="源码-8" tabindex="-1">源码</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> width <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">isReize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> style <span class="token operator">=</span> document<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">!==</span> style<span class="token punctuation">.</span>width <span class="token operator">||</span> height <span class="token operator">!==</span> style<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      binding<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 执行传入的方法</span>\n    <span class="token punctuation">}</span>\n    width <span class="token operator">=</span> style<span class="token punctuation">.</span>width<span class="token punctuation">;</span>\n    height <span class="token operator">=</span> style<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n    el<span class="token punctuation">.</span>__timer__ <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>isReize<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 周期性监听元素是否改变</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">unbind</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">clearInterval</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>__timer__<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="参数-attributes-8" tabindex="-1">参数 Attributes：</h3><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th><th>类型</th><th>必填</th></tr></thead><tbody><tr><td>resize()</td><td>传入元素改变 size 后执行的方法</td><td>无</td><td>Function</td><td>是</td></tr></tbody></table><h3 id="示例-9" tabindex="-1">示例</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!--传入 resize() 方法--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-resize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>resize<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="使用方式" tabindex="-1">使用方式</h2><p>如何使用这些指令？</p><p>为了便于管理指令，我们将每个指令都存在于单独的 <code>js</code> 文件中，你可以像这样将指令 <code>import</code> 进来后注册指令：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> ellipsis <span class="token keyword">from</span> <span class="token string">&#39;./ellipsis&#39;</span> <span class="token comment">// 引入指令</span>\n<span class="token comment">// import other directives</span>\n\n<span class="token keyword">const</span> directives <span class="token operator">=</span> <span class="token punctuation">{</span>\n  ellipsis\n<span class="token comment">// other directives</span>\n<span class="token punctuation">}</span>\n\nObject<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>directives<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> directives<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>或者你可以直接使用 <code>Vue.directive</code> 进行注册：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 注册一个全局自定义指令 `v-focus`</span>\nVue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 当被绑定的元素插入到 DOM 中时……</span>\n  <span class="token function-variable function">inserted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 聚焦元素</span>\n    el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这样就可以正常使用这些指令了：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-指令名称</span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>我们常常在引入全局功能时，主要都是写于 js 文件、组件中。不同于他们在使用时每次需要引用或注册，在使用上指令更加简洁。</p><p>除了将功能封装成组件，还可以多多考虑将一些简洁实用的功能放到 directive 中。例如：常用的 css 样式、js 的一些操作、utils 中的一些工具方法、甚至是一个完整的组件都可以放进去（不过需要考虑一下性能和复杂度）。</p>',102),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);